<?php

function multianchor_permission() {
  return array(
    'MultiAnchors' => array(
      'title' => t('Edit MultiAnchors'),
    ),
  );
}

function multianchor_menu() {
   
  $items = array();
   
  $items['admin/config/search/multianchor'] = array(
    'title' => 'Multianchor',
    'description' => 'Configure the multianchor.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multianchor_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('configuration'),
  );

  return $items;
}

function multianchor_settings() {
  $form['urls'] = array(
      '#title' =>  t('Specify a set of URLs'),
      '#description' => t('URLs should be separated by commas'),
      '#type' => 'textarea',
      '#default_value' => _multianchor_get_urls(),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save multianchor settings'),
  );

  return $form;
}

// Вывод в форму анкоров
function _multianchor_get_urls() {
  $anchors =variable_get('multianchors');
  $str = "";
  foreach ($anchors as $link => $anchor) {
    $str .= "# {$link} \n";
    foreach($anchor as $label => $prob) {
      $str .= "{$label} : {$prob} \n";
    }
    $str .= "\n";
  }
  return $str;

}

// Проверка формы на правильность введенных данных
function multianchor_settings_validate($form, &$form_state) {
  $ret = TRUE;
  $url_str = $form_state['values']['urls'];
  $lines = split("\n", $url_str);
  foreach ($lines as $l) {
    trim($l);
    if (preg_match("/^[[:space:]]*$/", $l))
    continue;
    if ($l['0']=="#"){
      $urls_array = split("#", $l, 2);
      $key=trim($urls_array[1]);
      if (!preg_match("/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/",$key)) {
        form_set_error('key', 'Неккоректный URL адрес: ' . $key);
        $ret = FALSE;
      }
      continue;
    }

    if (!ereg(':', $l)) {
      form_set_error('l', 'Отсутствует ":" в строке: ' . $l);
      $ret = FALSE;
    }

    $str_array = explode(":", $l);
    $key1 = trim($str_array[0]);
    if (empty($key1)) {
      form_set_error('key1', 'Не введено имя ссылки: ' . $key1);
      $ret = FALSE;
    }

    if (!preg_match("/^[0-9]+$/",  trim($str_array[1]))) {
      form_set_error('trim($str_array[1])', 'Коэффициент должен быть целым числом: ' . trim($str_array[1]));
      $ret = FALSE;
    }

  }

  return $ret;
}

// Сохранение всех введенных анкоров
function multianchor_settings_submit($form, &$form_state) {
  $url_str = $form_state['values']['urls'];
  $lines = split("\n", $url_str);
  foreach ($lines as $l) {
    trim($l);
    if (preg_match("/^[[:space:]]*$/", $l))
    continue;
    if ($l['0']=="#"){
      $urls_array = split("#", $l, 2);
      $key=trim($urls_array[1]);
      continue;
    }

    $str_array = explode(":", $l);
    $key1 = trim($str_array[0]);
    $anchors[$key][$key1] = trim($str_array[1]);
  }
  variable_set('multianchors', $anchors);

}

function multianchor_block_info() {
  $blocks = array();
  $blocks[0]['info'] = t('MultiAnchor');
  $blocks[0]['cache'] = BLOCK_CACHE_GLOBAL;
   
  return $blocks;
}

// Вывод в блок
function multianchor_block_view($delta = '') {

  if ( arg(0) == 'node' && is_numeric(arg(1)) && ! arg(2)) {
    $node = node_load(arg(1));
    $blocks = array();
    $blocks['subject'] = null;
    $blocks['content'] = anchor($node->nid);
  } else {
    $blocks = array();
    $blocks['subject'] = null;
    $blocks['content'] = anchor(crc32(arg(0) . arg(1) . arg(2)));
  }

  return $blocks;
}


// Рулетка
function generate_anchor($anchors, $seed) {
  $num_sectors = 0;
  foreach ($anchors as $anchor) {
    foreach($anchor as $prob) {
      $num_sectors += $prob;
    }
  }

  srand($seed);
  $sector = rand(1, $num_sectors);

  foreach ($anchors as $link => $anchor) {
    foreach($anchor as $label => $prob) {
      if ($sector <= $prob) return array("link" => $link, "label" => $label);
      else $sector -= $prob;
    }
  }
}

function anchor($seed) {
  $anchors = variable_get('multianchors');
  $anchor = generate_anchor($anchors, $seed);
  $link = $anchor["link"];
  $label = $anchor["label"];
  return "<a href='{$link}'>{$label}</a>";
}
